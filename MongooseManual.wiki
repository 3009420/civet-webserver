#summary Describes all configurable options
#labels Featured

<pre>
mongoose(1)		  BSD General Commands Manual		   mongoose(1)

NAME
     mongoose - lightweight web server

SYNOPSIS
     mongoose [config_file]
     mongoose [OPTIONS]
     mongoose -A htpasswd_file domain_name user_name password

DESCRIPTION
     mongoose is small, fast and easy to use web server with CGI, SSL, MD5
     authorization, and basic SSI support.

     mongoose does not detach from terminal, and uses current working direc-
     tory as the web root, unless -r option is specified.  It is possible to
     specify multiple ports to listen on. For example, to make mongoose listen
     on HTTP port 80 and HTTPS port 443, one should start it as: mongoose -s
     cert.pem -p 80,443s

     Unlike other web servers, mongoose does not expect CGI scripts to be put
     in a special directory. CGI scripts can be anywhere. CGI (and SSI) files
     are recognized by the file extension.

     If no arguments are given, mongoose searches for a configuration file
     called "mongoose.conf" in the same directory where mongoose binary is
     located. Alternatively, a file name could be specified in the command
     line. Format of the configuration file is the same as for the command
     line options except that each option must be specified on a separate
     line, leading dashes for option names must be omitted.  Lines beginning
     with '#' and empty lines are ignored.

OPTIONS
     -A htpasswd_file domain_name user_name password
	     Add/edit user's password in the passwords file. Deleting users
	     can be done with any text editor. Functionality is similar to
	     Apache's htdigest utility.

     -C cgi_extensions
	     Comma-separated list of CGI extensions.  All files having these
	     extensions are treated as CGI scripts. Default: ".cgi,.pl,.php"

     -E cgi_environment
	     Extra environment variables to be passed to the CGI script in
	     addition to standard ones. The list must be comma-separated list
	     of X=Y pairs, like this: "VARIABLE1=VALUE1,VARIABLE2=VALUE2".
	     Default: ""

     -G put_delete_passwords_file
	     PUT and DELETE passwords file. This must be specified if PUT or
	     DELETE methods are used. Default: ""

     -I cgi_interpreter
	     Use cgi_interpreter as a CGI interpreter for all CGI scripts
	     regardless script extension.  Default: "". Mongoose decides which
	     interpreter to use by looking at the first line of a CGI script.

     -P protect_uri
	     Comma separated list of URI=PATH pairs, specifying that given
	     URIs must be protected with respected password files. Default: ""

     -R authentication_domain
	     Authorization realm. Default: "mydomain.com"

     -S ssi_extensions
	     Comma separated list of SSI extensions. Unknown SSI directives
	     are silently ignored. Currently, two SSI directives supported,
	     "include" and "exec".  Default: "shtml,shtm"

     -a access_log_file
	     Access log file. Default: "", no logging is done.

     -d enable_directory_listing
	     Enable/disable directory listing. Default: "yes"

     -e error_log_file
	     Error log file. Default: "", no errors are logged.

     -g global_passwords_file
	     Location of a global passwords file. If set, per-directory
	     .htpasswd files are ignored, and all requests must be authorised
	     against that file.  Default: ""

     -i index_files
	     Comma-separated list of files to be treated as directory index
	     files.  Default: "index.html,index.htm,index.cgi"

     -l access_control_list
	     Specify access control list (ACL). ACL is a comma separated list
	     of IP subnets, each subnet is prepended by '-' or '+' sign. Plus
	     means allow, minus means deny. If subnet mask is omitted, like
	     "-1.2.3.4", then it means single IP address. Mask may vary from 0
	     to 32 inclusive. On each request, full list is traversed, and
	     last match wins. Default setting is to allow all. For example, to
	     allow only 192.168/16 subnet to connect, run "mongoose
	     -0.0.0.0/0,+192.168/16".  Default: ""

     -m extra_mime_types
	     Extra mime types to recognize, in form "extension1=type1,exten-
	     sion2=type2,...". Extension must include dot.  Example: "mongoose
	     -m .cpp=plain/text,.java=plain/text". Default: ""

     -p listening_ports
	     Comma-separated list of ports to listen on. If the port is SSL, a
	     letter 's' must be appeneded, for example, "-p 80,443s" will open
	     port 80 and port 443, and connections on port 443 will be SSL-ed.
	     It is possible to specify an IP address to bind to. In this case,
	     an IP address and a colon must be prepended to the port number.
	     For example, to bind to a loopback interface on port 80 and to
	     all interfaces on HTTPS port 443, use "mongoose -p
	     127.0.0.1:80,443s". Default: "8080"

     -r document_root
	     Location of the WWW root directory. A comma separated list of
	     URI_PREFIX=DIRECTORY pairs could be appended to it, allowing Mon-
	     goose to serve from multiple directories. For example, "mongoose
	     -p /var/www,/config=/etc,/garbage=/tmp".  Default: "."

     -s ssl_certificate
	     Location of SSL certificate file. Default: ""

     -t num_threads
	     Number of worker threads to start. Default: "10"

     -u run_as_user
	     Switch to given user's credentials after startup. Default: ""

EMBEDDING
     mongoose was designed to be embeddable into C/C++ applications. Since the
     source code is contained in single C file, it is fairly easy to embed it
     and follow the updates. Please refer to http://code.google.com/p/mongoose
     for details.

EXAMPLES
     mongoose -r /var/www,/aa=/tmp,/bb=/etc -s /etc/cert.pem -p 8080,8043s
	     Start listening on port 8080 for HTTP, and 8043 for HTTPS connec-
	     tions.  Use /etc/cert.pem as SSL certificate file. Web root is
	     /var/www. In addition, map directory /tmp to URI /aa, directory
	     /etc to URI /bb.

     mongoose -l -0.0.0.0/0,+10.0.0.0/8,+1.2.3.4
	     Deny connections from everywhere, allow only IP address 1.2.3.4
	     and all IP addresses from 10.0.0.0/8 subnet to connect.

COPYRIGHT
     mongoose is licensed under the terms of the MIT license.

AUTHOR
     Sergey Lyubka <valenok@gmail.com>.

BSD				 Aug 31, 2010				   BSD
</pre>